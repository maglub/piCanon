#!/bin/bash

this_dir=$(cd `dirname $0`;pwd)
this_script=$(basename $0)
. $this_dir/../config/piSnapper.conf

pidFile=/var/run/piSnapper/$this_script.pid


#===================================
# Functions
#===================================
function setPid(){
  echo $$ > $pidFile
}

function removePid(){
  rm $pidFile
}

function getPid(){
  [ -f $pidFile ] && cat $pidFile
}

function checkPid(){
  local pid=$(getPid)
  #--- if $pid is empty, no pidFile exist
  [ -z "$pid" ] && { return 0 ; }

  local numProcs=$(ps -fp $pid | grep -v "^UID" | wc -l) 
  echo "pid: $pid numProcs: $numProcs"
  [ $numProcs -eq 0 ] && { echo "  - Bad PID-file, stating pid $pid, but $this_script is not running in a different process" 1>&2 ; removePid ; return 0 ; }  

  #--- if we get here, there is another process running
  echo "  - Process $pid is already running"
  return 1
}



#===================================
# MAIN
#===================================

#--- check for already running processes

if ! checkPid 
then
  echo "Error: $this_script is already running in a different process"
  exit 1 
fi

setPid


#sizes="thumb mid 640 1024"
sizes="thumb"
numCpus=$(cat /proc/cpuinfo  | grep processor | wc -l)

case $numCpus in
  1)
    parallelism=1
    ;;
  *)
    (( parallelism = $numCpus - 1 ))
    ;;
esac

#--- classic

[ -n "$1" ] && {
rm thumb*
rm 1024*
rm mid*
rm 640*
}

cd $baseDir/save
#--- sizes
for size in $sizes
do
  echo
  echo "Size: $size "
  #ls *.[jJ][pP][gG] *.[pP][nN][gG] 2>/dev/null | grep -vE "^thumb|^mid|^1024|^640" | xargs -L 1 -P $parallelism -IX $this_dir/genThumbnail -$size X
  comm -23 <(ls -a *.jpg) <(ls -a thumbs | grep "jpg$"  | sed -e 's/thumb\.//') | grep -vE "^thumb|^mid|^1024|^640" | xargs -L 1 -P $parallelism -IX $this_dir/genThumbnail -$size X
done

removePid
